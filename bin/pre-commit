#!/usr/bin/env ruby

require_relative 'phase_config'


def warn_and_exit(e)
  STDERR.puts "Pre-commit failed: #{e}\n"
  STDERR.puts "You can skip the pre-commit hook with 'git commit --no-verify'."
  STDERR.puts "If you skip it, please have a good reason, and please note it in the PR."
  exit(1)
end

begin
  PROJECT_DIR = File.join(ENV["GIT_DIR"], "..")
  CONFIG_DIR = File.join(PROJECT_DIR, "config")
  JSON_CONFIG_PATH = File.join(CONFIG_DIR, "challenges.json")
  LIST_CONFIG_PATH = File.join(PROJECT_DIR, ".challenge-list")

  json = JSON.pretty_generate(PhaseConfig::challenges_as_hash(PROJECT_DIR))
  flat = PhaseConfig::challenges_as_list(PROJECT_DIR).join("\n")

  File.open(JSON_CONFIG_PATH, "w") {|f| f.write(json + "\n")}
  File.open(LIST_CONFIG_PATH, "w") {|f| f.write(flat + "\n")}

  git_add_cmd = "git add #{JSON_CONFIG_PATH} #{LIST_CONFIG_PATH}"
  git_add_result = `#{git_add_cmd}`
  if $? == false
    err = "Failed to stage config files: #{git_add_cmd}\n"
    err << "git exited with non-0 status.\n"
    err << git_add_result
    warn_and_exit(err)
  end
rescue Exception => e
  STDERR.puts e.backtrace
  warn_and_exit(e)
end
